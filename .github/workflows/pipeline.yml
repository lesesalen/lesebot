name: pipeline

on: [push, pull_request]

jobs:
  pipeline:
    name: pipeline
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install
        run: npm ci --no-optional

      - name: Lint
        run: |
          npm run style
          npm run lint

      - name: Build
        run: npm run build

  publish_docker:
    if: ${{ github.ref == 'refs/heads/main' }}
    name: Publish Docker image
    needs: pipeline
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/lesesalen/lesebot:latest,ghcr.io/lesesalen/lesebot:${{ github.sha }}

#  deploy:
#    if: ${{ github.ref == 'refs/heads/main' }}
#    name: Deploy
#    runs-on: ubuntu-latest
#    needs: publish_docker
#
#    steps:
#      - name: Deploy application
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          key: ${{ secrets.KEY }}
#          script: |
#            cd testbot
#            git pull
#            ./deploy.sh
